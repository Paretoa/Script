# -*- coding: utf8 -*- 
'''pip install aliyun-python-sdk-core # 安装阿里云 SDK 核心库
   pip install aliyun-python-sdk-address-purification # 安装地址标准化SDK
'''
import json
import re,time,sys
import pandas as pd
from aliyunsdkcore.client import AcsClient
from aliyunsdkaddress_purification.request.v20191118 import CompleteAddressRequest
local =  pd.read_clipboard('\t').iloc[:,0]#从剪贴板获取数据并且排除第一行
print("执行开始，祈祷不报错".center(len(local) // 2,"-"))
# Initialize AcsClient instance
client = AcsClient(
  ak = "LTAI5tRHcRAYQSbqX9cRz6Jj",
  secret="LdPmMY4ybD6xuZK2tH72ENRgLhV7t2",
  region_id="cn-hangzhou"
);
# Initialize a request and set parameters
find_local = re.compile(r'(\w*)=(\w*)')#正则提取出中文，先编译有利于加快提取效率
request = CompleteAddressRequest.CompleteAddressRequest()
request.set_ServiceCode("addrp");
request.set_AppKey("Axqwerasdf1a");
request.set_Text("");
result = []#存放输出的容器
count = 0#计数器
start = time.perf_counter()#进度条start
scale = 50#定义进度条长度
for each in local:
    request.set_Text(each)#更改Tex属性，也就是地址
    response = client.do_action_with_exception(request)#发送http请求
    result_response = json.loads(response)#返回json数据编码
    result_response = json.loads(result_response["Data"])["complete"]#获取要处理的字符串
    result_request = dict(find_local.findall(result_response))#利用正则表达式提取所有中文
    del result_request['detail']#删除无用字段
    list_yuan = pd.DataFrame(result_request.values()).drop_duplicates()[0].to_list()#利用df去重，然后把第一列转换成列表
    list_ys = "".join(list_yuan[3:])#把地址部分拼接成一个字符串
    list_ys_new = list_yuan[0:3] + [list_ys]#拼接全部列表
    result.append(list_ys_new)#将列表添加到空列表中
    count += 1
    #进度条展示
    a = "*" * count
    b = "." * (len(local) - count)
    c = (count /len(local)) * 100
    dur = time.perf_counter() - start
    print("\r{:^3.0f}%[{}->{}]{:.2f}s".format(c,a,b,dur),end = "")
result_result = pd.DataFrame(result,columns=["省","市","区","地址"]).to_clipboard(index=False)
